{"version":3,"file":"static/js/799.11284bd0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","webpack://react-homework-template/./src/helpers/Box/Box.module.css?a8e6","helpers/Box/Box.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","webpack://react-homework-template/./src/helpers/Error/Error.module.css?370d","helpers/Error/Error.jsx","webpack://react-homework-template/./src/components/SearchMovie/SearchMovie.module.css?c852","components/SearchMovie/SearchMovie.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Label\":\"MovieItem_Label__nCKGa\",\"Img\":\"MovieItem_Img__uPx3v\"};","import css from './MovieItem.module.css';\nimport defaultImg from '../../img/default-movie.jpeg';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MovieItem = ({ url, title, activeId, location }) => {\n  return (\n    <li>\n      <Link to={`/movies/${activeId}`} state={{ from: location }}>\n        <img\n          className={css.Img}\n          src={\n            url !== null ? `https://image.tmdb.org/t/p/w300${url}` : defaultImg\n          }\n          alt={title}\n        />\n        <h2 className={css.Label}>{title}</h2>\n      </Link>\n    </li>\n  );\n};\n\nMovieItem.propTypes = {\n  url: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  activeId: PropTypes.number.isRequired,\n  location: PropTypes.shape({\n    state: PropTypes.string,\n  }),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Box\":\"Box_Box__vnYME\"};","import css from './Box.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Box = ({ children }) => {\n  return <div className={css.Box}>{children}</div>;\n};\n\nBox.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element.isRequired),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"add\":\"SearchForm_add__VDd3X\",\"full\":\"SearchForm_full__vV29r\",\"Label\":\"SearchForm_Label__bFpHJ\"};","import { useState } from 'react';\nimport css from './SearchForm.module.css';\nimport PropTypes from 'prop-types';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const hanleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n  return (\n    <form className={css.form} onSubmit={hanleSubmit}>\n      <label className={css.Label} htmlFor=\"search\">\n        Find movie by name\n      </label>\n      <input\n        className={css.full}\n        type=\"text\"\n        name=\"search\"\n        value={query}\n        onChange={handleChange}\n        placeholder=\"Search movie...\"\n        autoComplete=\"off\"\n      />\n      <button className={css.add} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Error\":\"Error_Error__lH5Db\",\"react-icons\":\"Error_react-icons__GzjeT\"};","import css from './Error.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Error = ({ text }) => {\n  return (\n    <>\n      <h3 className={css.Error}>{text}</h3>\n    </>\n  );\n};\n\nError.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"MovieList\":\"SearchMovie_MovieList__qy4pl\"};","// import { Button } from 'components/Button';\nimport { MovieItem } from 'components/MovieItem';\nimport { Error } from 'helpers/Error';\nimport { useLocation } from 'react-router-dom';\nimport css from './SearchMovie.module.css';\nimport PropTypes from 'prop-types';\n\nconst Status = {\n  INIT: 'init',\n  LOADING: 'loading',\n  SUCCESS: 'success',\n  ERROR: 'error',\n};\n\nexport const SearchMovie = ({ value, status, movies }) => {\n  const location = useLocation();\n  console.log('value', typeof value);\n  console.log('status', typeof status);\n  console.log('movies', typeof movies);\n\n  return (\n    <>\n      {status === Status.SUCCESS && movies.length > 0 && (\n        <ul className={css.MovieList}>\n          {movies?.map(item => {\n            return (\n              <MovieItem\n                location={location}\n                key={item.id}\n                title={item.original_title}\n                url={item.poster_path}\n                activeId={item.id}\n              />\n            );\n          })}\n        </ul>\n      )}\n      {status === Status.SUCCESS && movies.length === 0 && (\n        <Error\n          text={`Sorry, but nothing was found for \"${value}\"! try again!`}\n        />\n      )}\n      {/* {movies.length >= 12 && <Button onClick={handleChangePage} />} */}\n    </>\n  );\n};\n\nSearchMovie.propTypes = {\n  value: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  movies: PropTypes.arrayOf(PropTypes.shape).isRequired,\n};\n","import { SearchForm } from 'components/SearchForm';\nimport { SearchMovie } from 'components/SearchMovie';\nimport { Box } from 'helpers/Box/Box';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByName } from 'services/api';\n\nconst Status = {\n  INIT: 'init',\n  LOADING: 'loading',\n  SUCCESS: 'success',\n  ERROR: 'error',\n};\n\nexport const Movies = () => {\n  // const [searchQuery, setSearchQuery] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(Status.INIT);\n\n  const page = searchParams.get('page') ?? 1;\n  const search = searchParams.get('search') ?? '';\n\n  // const params = useMemo(\n  //   () => Object.fromEntries([...searchParams]),\n  //   [searchParams]\n  // );\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const data = await getMovieByName(search, page);\n        setMovies(data);\n        setStatus(Status.SUCCESS);\n      } catch (error) {\n        setStatus(Status.ERROR);\n        console.log(error.message);\n      }\n    };\n    if (search) {\n      getData();\n    } else {\n      setMovies([]);\n    }\n\n    // if (search) {\n    //   setStatus(Status.LOADING);\n    //   getMovieByName(search, page)\n    //     .then(data => {\n    //       setStatus(Status.SUCCESS);\n    //       setMovies(data);\n    //     })\n    //     .catch(() => {\n    //       setStatus(Status.ERROR);\n    //       console.log('error');\n    //     });\n    // }\n  }, [search, page]);\n\n  const handleUpdateSearch = value => {\n    setSearchParams({ search: value, page: 1 });\n  };\n\n  // const handleChangePage = newPage => {\n  //   setSearchParams({ ...params, page: newPage });\n  // };\n\n  // const handleSubmit = searchQuery => {\n  //   setSearchQuery(searchQuery);\n  // };\n\n  return (\n    <Box>\n      <SearchForm onSubmit={handleUpdateSearch} />\n      <SearchMovie\n        // handleChangePage={handleChangePage}\n        value={search}\n        movies={movies}\n        status={status}\n      />\n    </Box>\n  );\n\n  // return (\n  //   <Box>\n  //     <SearchForm onSubmit={handleSubmit} />\n  //     <SearchMovie value={searchQuery} />\n  //   </Box>\n  // );\n};\n","import axios from 'axios';\n\nconst API_KEY = 'ee23ab55503b4831e257c10a3a06bf9b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getHomeMovies() {\n  const { data } = await axios.get(`/trending/movie/week`, {\n    params: { api_key: API_KEY },\n  });\n  return data.results;\n}\n\nexport async function getMovieByName(query, page) {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page,\n      query,\n    },\n  });\n  return data.results;\n}\n\nexport async function getMovieDetalis(id) {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return data;\n}\n\nexport async function getMovieCast(id) {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews\n`,\n    {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    }\n  );\n  return data.results;\n}\n"],"names":["MovieItem","url","title","activeId","location","to","state","from","className","css","src","defaultImg","alt","Box","children","SearchForm","onSubmit","useState","query","setQuery","e","preventDefault","htmlFor","type","name","value","onChange","target","placeholder","autoComplete","Error","text","Status","SearchMovie","status","movies","useLocation","console","log","length","map","item","original_title","poster_path","id","Movies","useSearchParams","searchParams","setSearchParams","setMovies","setStatus","page","get","search","useEffect","getData","getMovieByName","data","message","API_KEY","getHomeMovies","axios","params","api_key","results","language","getMovieDetalis","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}